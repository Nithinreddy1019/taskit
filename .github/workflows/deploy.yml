name: Build and deploy to docker


on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: checkout code
      uses: actions/checkout@v2

    - name: Setup NodeJs
      uses: actions/setup-node@v2
      with:
        node-version: "22"

    - name: Install dependencies
      run: npm install
    
    - name: Generate prisma client
      run: npm run db:generate

    - name: build application
      run: npm run build
      env:
        NEXT_PUBLIC_APP_URL: ${{secrets.NEXT_PUBLIC_APP_URL}}
        BUCKET_REGION: ${{secrets.BUCKET_REGION}}
        BUCKET_NAME: ${{secrets.BUCKET_NAME}}
        ACCESS_KEY: ${{secrets.ACCESS_KEY}}
        SECRET_ACCESS_KEY: ${{secrets.SECRET_ACCESS_KEY}}
        AUTH_GITHUB_CLIENT_ID: ${{secrets.AUTH_GITHUB_CLIENT_ID}}
        AUTH_GITHUB_CLIENT_SECRET: ${{secrets.AUTH_GITHUB_CLIENT_SECRET}}
        GOOGLE_CLIENT_ID: ${{secrets.GOOGLE_CLIENT_ID}}
        GOOGLE_CLIENT_SECRET: ${{secrets.GOOGLE_CLIENT_SECRET}}
        DATABASE_URL: ${{secrets.DATABASE_URL}}
        DIRECT_URL: ${{secrets.DIRECT_URL}}
        AUTH_SECRET: ${{secrets.AUTH_SECRET}}
        AUTH_TRUST_HOST: ${{secrets.AUTH_TRUST_HOST}}
        NEXTAUTH_URL: ${{secrets.NEXTAUTH_URL}}
      
    - name: Install SSH key
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{secrets.SSH_KEY}}

    - name: Add EC2 to known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{secrets.SSH_HOST}} >> ~/.ssh/known_hosts


    - name: Execute remote SSH commands to prepare directory
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          sudo mkdir -p /var/www/nextjs-app
          sudo chown ${{ secrets.EC2_USERNAME }}:${{ secrets.EC2_USERNAME }} /var/www/nextjs-app



    - name: Deploy to EC2
      run: |
        rsync -avz --delete \
        -e "ssh -p ${{secrets.SSH_PORT}}" \
        .next package.json package-lock.json public assets next.config.mjs \
        ${{secrets.SSH_USERNAME}}@${{secrets.SSH_HOST}}:/var/www/nextjs-app

    - name: Execute remote SSH commands
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          cd /var/www/nextjs-app
          npm install --production
          pm2 restart nextjs-app || pm2 start npm --name "nextjs-app" -- start
